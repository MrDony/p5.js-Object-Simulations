
var g_height =500
var g_length=500
var g_trailCount=20;
var g_damping=20
var g_rad=10
var g_thingCount=10;
var g_randomness=1;
var g_things=[];
var g_forces=[];

class Vector
{
  constructor(x,y)
  {
    this.x=x;
    this.y=y;
  }
}

class Trail
{
  constructor(p={})
  {
    //print(p);
    this.img=[];
    for(i=0;i<g_trailCount;i++)
    {
      this.img[i]=new Vector(p.x,p.y);
      print("trail i = ",i);
    }
  }
  
  update(p={})
  {
    for(i=g_trailCount-1;i>=1;i--)
    {
      this.img[i].x=this.img[i-1].x;
      this.img[i].y=this.img[i-1].y;
    }
    this.img[0]=p;
    //print(this.img[0]);
    this.show();
  }

  show()
  {
    for(i=0;i<g_trailCount;i++)
    {
      stroke(255);
      fill(255,255,255);
      ellipse(this.img[i].x,this.img[i].y,1,1);
      
    }
  }
}


class Force
{
  constructor(dx,dy)
  {
    this.dirx=dx;
    this.diry=dy; 
  }
  update()
  {
    this.dirx=random(-1,1);
    this.diry=random(-1,1);
  }

}
class thing
{
   
    constructor(px,py,vx,vy,ax,ay,m)
    {
      //if(px&&py&&vx&&vy&&ax&&ay&&m)
      
        this.posx=px;
        this.posy=py;
        this.velx=vx;
        this.vely=vy;
        this.accx=ax;
        this.accy=ay;
        this.mass=m;

        this.pos=new Vector(px,py);
        //print(this.pos)
        this.trl=new Trail(this.pos);
        //this.show()
      
      
    }
    applyForce(f)
    {
        this.accx=f.dirx/this.mass;
        this.accy=f.diry/this.mass;

        this.velx+=this.accx;
        this.vely+=this.accy;
    }
    update()
    {
        this.posx+=this.velx;
        this.posy+=this.vely;
      
        this.trl.update(new Vector(this.posx,this.posy));
        //print("==",this.pos)
        stroke(255);
        fill(255,25,23);
        ellipse(this.posx,this.posy,g_rad,g_rad);
    }
    show()
    {
      stroke(255);
      fill(255,25,23);
      ellipse(this.pos.x,this.pos.y,g_rad,g_rad);
      print("show = ",this.pos," = ",g_rad)
    }
    edges()
    {
      if(this.posy>=(g_height-g_rad)/2)
      {
        this.posy=(g_height-g_rad)/2;
        this.vely*=-1;
        this.vely/=(1+g_damping);
      }
      if(this.posy<=(-g_height+g_rad)/2)
      {
        this.posy=(-g_height+g_rad)/2;
        this.vely*=-1;
        this.vely/=(1+g_damping);
      }
      if(this.posx>=(g_length-g_rad)/2)
      {
        this.posx=(g_length-g_rad)/2;
        this.velx*=-1;
        this.velx/=(1+g_damping);
      }
      if(this.posx<=(-g_length+g_rad)/2)
      {
        this.posx=(-g_length+g_rad)/2;
        this.velx*=-1;
        this.velx/=(1+g_damping);
      }
    }
    collide()
    {
      for(i=0;i<g_thingCount;i++)
      {
        if((i+1)!=this.m)
        {
          if(dist( this.posx, this.posy, g_things[i].posx, g_things[i].posy) - g_rad < 5)
          {
            this.vely*=-1;
            this.velx*=-1;
            g_things[i].velx*=-1;
            g_things[i].vely*=-1;
          }
        }
        
      }
    }
    
}





function setup()
{
  createCanvas(g_length,g_height);
  for(i=0;i<g_thingCount;i++)
  {
    //i++;
    //print(g_thingCount)
    print("setup things i = ",i);
    g_things[0]=new thing(random(-g_length/2,g_length/2),
                          random(-g_height/2,g_height/2),
                          random(-1,1),random(-1,1),
                          0,0,
                          i+1);
    g_things[1]=new thing(random(-g_length/2,g_length/2),
                          random(-g_height/2,g_height/2),
                          random(-1,1),random(-1,1),
                          0,0,
                          i+1);
    g_things[2]=new thing(random(-g_length/2,g_length/2),
                          random(-g_height/2,g_height/2),
                          random(-1,1),random(-1,1),
                          0,0,
                          i+1);
    //i++;
    //print(i);
  }
  for(i=0;i<g_thingCount;i++)
  {
    //print(i);
    g_forces[i]=new Force(random(-1,10),random(-1,1));
  }
  
}

function draw()
{
  background(0);
  translate(250,250);
  stroke(255);
  fill(12);
  //showGrid();
  
  run();
  
  
}

function run()
{
  for(i=0;i<g_thingCount;i++)
  {
    g_things[0].edges();
     //print(i);
    g_things[0].update();
     g_things[1].edges();
     //print(i);
    g_things[1].update();
     g_things[2].edges();
     //print(i);
    g_things[2].update();
    //g_things[0].applyForce(g_forces[0]);
    
    g_things[0].applyForce(g_forces[0]);
    g_things[1].applyForce(g_forces[1]);
    g_things[2].applyForce(g_forces[2]);
    //print(g_forces[i]);
   //g_things[0].update();
    //g_things[i].collide();
    if(random(0,1000000)<g_randomness*1000000)
    {
      g_forces[0].update();
      g_forces[1].update();
      g_forces[2].update();
      //g_forces[i].update();
    }
    
  }
  

}

function showGrid()
{
  var grid=50
  for(i=-g_length/2;i<g_length;i+=grid)
  {
    line(-g_height/2,i,g_height,i)
  }
  for(i=-g_height/2;i<g_height;i+=grid)
  {
    line(i,-g_length/2,i,g_length/2)
  }
  
}