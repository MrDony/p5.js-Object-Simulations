var g_height=500;
var g_width=500;
var g_trailCount=50;
var g_parCount=20;
var g_damping=0;
var g_particles=[];



class Vector
{
  constructor(x,y)
  {
    this.x=x;
    this.y=y;
    //print(x,y)
  }
}

class Trail
{
  constructor(p={})
  {
    this.img=[];
    for(i=0;i<g_trailCount;i++)
    {
      this.img[i]=new Vector(p.x,p.y);
    }
  }
  
  update(p={})
  {
    for(i=g_trailCount-1;i>=1;i--)
    {
      //print("i=",i);
      //print("before",this.img[i]);
      this.img[i].x=this.img[i-1].x;
      this.img[i].y=this.img[i-1].y;
      //print("after",this.img[i]);
    }
    this.img[0]=p;

    this.show();
  }

  show()
  {
    for(i=0;i<g_trailCount;i++)
    {
      stroke(255);
      fill(255,255,255);
      ellipse(this.img[i].x,this.img[i].y,1,1);
      
      //print(this.img[i]);
    }
  }
}

class Particle
{
  constructor(p={},v={},a={},m=1,r=1)
  {
    this.pos=p;
    this.vel=v;
    this.acc=a;
    this.mass=m;
    this.rad=r;

    this.trl=new Trail(this.pos);
  }

  applyForce(f={})
  {
    print(this.acc, f)
    this.acc.x=f.x/this.mass;
    this.acc.y=f.y/this.mass;
  }
  update()
  {
    this.vel.x+=this.acc.x;
    this.vel.y+=this.acc.y;
    this.pos.x+=this.vel.x;
    this.pos.y+=this.vel.y;
    
    
    
    this.show();
    this.trl.update(this.pos);
    this.edge();
  }
  edge()
  {
    if(this.pos.x>=(g_width-this.rad)/2)
    {
      this.pos.x=(g_width-this.rad)/2;
      this.vel.x*=-1;
      this.vel.x/=(1+g_damping);
    }
    if(this.pos.x<=(-g_width+this.rad)/2)
    {
      this.pos.x=(-g_width+this.rad)/2;
      this.vel.x*=-1;
      this.vel.x/=(1+g_damping);
    }

    if(this.pos.y>=(g_height-this.rad)/2)
    {
      this.pos.y=(g_height-this.rad)/2;
      this.vel.y*=-1;
      this.vel.y/=(1+g_damping);
    }
    if(this.pos.y<=(-g_height+this.rad)/2)
    {
      this.pos.y=(-g_height+this.rad)/2;
      this.vel.y*=-1;
      this.vel.y/=(1+g_damping);
    }
  }
  show()
  {
    stroke(255);
    fill(0,200,200);
    ellipse(this.pos.x,this.pos.y,this.rad,this.rad);
    //this.trl.show();
  }
}

function setup() 
{
  createCanvas(g_width, g_height);
  for(i=0;i<g_parCount;i++)
  {
    random(-10,10);
    g_particles[i]=new Particle(
      new Vector(random(-10,10),random(-10,10)),
      new Vector(random(-10,10),random(-10,10)),
      new Vector(0,0),
                                1,random(0,30));
    
  }
}

function draw() 
{
  translate(g_width/2,g_height/2)
  background(0);
  for(i=0;i<g_parCount;i++)
  {

  g_particles[i].update();
  var l_v=new Vector( random(-1,1),random(-1,1) );
  
  //g_particles[i].applyForce(l_v);
  
  }
}